/*
 * CSIRO Open Source Software License Agreement (variation of the BSD / MIT License)
 * Copyright (c) 2017, Commonwealth Scientific and Industrial Research Organisation (CSIRO) ABN 41 687 119 230.
 * See LICENCE for the complete licence information (https://github.com/csiro-crop-informatics/biokanga/LICENSE)
 * Contact: Alex Whan <alex.whan@csiro.au>
 */

#pragma once

const int cAlignNumSNPfields = 23;			// if generated by 'biokanga align' then there will be this many CSV fields
const int cSNPMarkerNumFields = 4 + 9;		// if generated by 'biokanga snpmarkers' then there will be a minimum of this number of CSVfields

typedef struct TAG_sCultivar {
	char szName[cMaxDatasetSpeciesChrom+1];		// name of this cultivar
} tsCultivar;

class CSNPLoci
{
	char m_TargAssemblyName[cMaxDatasetSpeciesChrom+1]; // alignments were against this targeted assembly
	int m_NumCultivars;							// number of cultivars being processed
	tsCultivar m_Cultivars[cMaxCultivars];		// cultivar specific metadata
	CCSVFile *m_pCSV;							// used to load SNP calls
	int LoadSNPs(char *pszSNPFile);				// load SNP calls from this CSV file
	int LoadSeqs(char *pszSeqFile);				// load sequences from this multifasta file, SNPs were called relatative to these sequences
	int Filter(int MinSep);						// filter out SNPs which are not separated by at least this many bases from any other SNP loci 
	int Dedupe(bool bSenseOnly=false);			// remove any SNP sequences which are duplicates of other SNP sequences
	int Report(char *pszOutFile);				// report SNP sequences to this file

public:
	CSNPLoci(void);
	~CSNPLoci(void);

	void Reset(void);							// re-initialise  
	int Process(char *pszSNPFile,				// load SNP calls from this CSV file
				char *pszSeqFile,				// load sequences from this multifasta file, SNPs were called relatative to these sequences
				char *pszOutFile,				// report SNP sequences to this file
				int  Extd5,						// extend SNP 5' this many bases
				int  Extd3,						// extend SNP 3' this many bases
				int MinSep,						// filter out SNPs which are not separated by at least this many bases from any other SNP loci
				bool bSenseOnly=false);			// remove any SNP sequences which are duplicates of other SNP sequences
};

